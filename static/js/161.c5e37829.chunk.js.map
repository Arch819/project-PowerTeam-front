{"version":3,"file":"static/js/161.c5e37829.chunk.js","mappings":"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","sources":["components/Forms/SignForm.styled.js","page/SignUpPage/SignUpPage.styled.js","components/Forms/SignUpForm.jsx","page/SignUpPage/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledLabel = styled.label`\n  position: absolute;\n  top: 14px;\n  left: 14px;\n  color: #efede899;\n  font-size: 14px;\n  line-height: 1.2;\n  text-align: center;\n  pointer-events: none;\n  transition: top 0.2s, font-size 0.2s, transform 0.2s;\n  transform-origin: left top;\n  ${props =>\n    props.active &&\n    `\n    top: -6px;\n    transform: scale(0.7) translateY(-100%);\n    left: 0;\n    font-size: 16px;\n  `}\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    ${props =>\n      props.active &&\n      `\n    top: -5px;\n    font-size: 20px;\n  `}\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 46px;\n  max-width: 335px;\n  font-size: 14px;\n  line-height: 1.2;\n  align-items: center;\n  border-radius: 12px;\n  border: ${props =>\n    props.error\n      ? 'var(--border-input-negative)'\n      : props.success\n      ? 'var(--border-input-positive)'\n      : '1px solid rgba(239, 237, 232, 0.3)'};\n  padding: 14px;\n  color: var(--color-text-primary);\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #e6533c;\n    outline: none;\n  }\n  &:focus + ${StyledLabel} {\n    top: -15px;\n    font-size: 14px;\n  }\n\n  &:last-child {\n    margin-bottom: ${props => (props.error ? '0' : '25px')};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    max-width: 364px;\n    height: 52px;\n\n    &:last-child {\n      margin-bottom: ${props => (props.error ? '0' : '28px')};\n    }\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  margin-bottom: 18px;\n  &:last-child {\n    margin-bottom: ${props => (props.error ? '0' : '28px')};\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    &:last-child {\n      margin-bottom: ${props => (props.error ? '0' : '30px')};\n    }\n  }\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-top: 4px;\n  fill: ${props => props.fill || '#d80027'};\n`;\n\nexport const ErrorMessage = styled.div`\n  color: ${props => props.color || '#d80027'};\n  margin-top: 4px;\n  line-height: 1.5;\n  font-size: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledPasswordInputContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconPasswordWrapper = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  width: 20px;\n  justify-content: flex-end;\n  top: 50%;\n  right: 14px;\n  transform: translateY(-50%);\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    right: 0;\n    left: 325px;\n  }\n`;\n\nexport const SvgPasswordIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const SubmitButton = styled.button`\n  display: block;\n  padding: 12px 40px;\n  margin-top: 28px;\n  background-color: var(--bg-btn);\n  color: var(--color-text-white);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-align: center;\n  border-radius: 12px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--bg-btn-hover);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n    padding: 16px 60px;\n    margin-top: 64px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row-reverse;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1024px) {\n    flex-wrap: nowrap;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    padding-top: 200px;\n    justify-content: space-between;\n  }\n`;\nexport const StyledWrapperTemplate = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 127px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 189px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 0px;\n  }\n`;\n\nexport const StyledSignUpTitle = styled.h2`\n  font-size: 24px;\n  line-height: 1.16;\n  color: var(--color-text-primary);\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 1.37;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const StyledParagraf = styled.p`\n  font-size: 14px;\n  line-height: 1.28;\n  color: rgba(239, 237, 232, 0.3);\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 496px;\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const StyledTextRedirection = styled.p`\n  line-height: 1.5;\n  color: rgba(239, 237, 232, 0.6);\n  margin-top: 12px;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 15px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  line-height: 1.5;\n  color: var(--color-text-primary);\n  text-decoration: underline;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { registerUser } from 'store/auth/operations';\nimport { notiflixMessage } from 'helpers/notiflixMessage';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  StyledInputContainer,\n  StyledLabel,\n  StyledInput,\n  IconWrapper,\n  SvgIcon,\n  ErrorMessage,\n  StyledPasswordInputContainer,\n  IconPasswordWrapper,\n  SvgPasswordIcon,\n  SubmitButton,\n} from './SignForm.styled';\nimport sprite from 'images/sprite.svg';\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nconst ValidationIcon = ({ error, touched, successText, errorText }) => {\n  return (\n    <IconWrapper>\n      <SvgIcon fill={!error && touched ? '#3CBF61' : null}>\n        <use href={`${sprite}#icon-checkmark`} />\n      </SvgIcon>\n      <ErrorMessage color={!error && touched ? '#3CBF61' : null}>\n        {!error ? successText : errorText}\n      </ErrorMessage>\n    </IconWrapper>\n  );\n};\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: async (values, actions) => {\n      dispatch(registerUser(values)).then(({ payload }) => {\n        if (payload.token) {\n          notiflixMessage(\n            'ok',\n            'You have been successfully registered and logged in! Your session is now active.'\n          );\n          actions.resetForm();\n        }\n      });\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Please enter your name'),\n      email: Yup.string()\n        .matches(emailPattern, 'Doesn`t look like a valid email')\n        .required('Please enter your email address'),\n      password: Yup.string().min(6).required('Please enter your password'),\n    }),\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => {\n    setShowPassword(prev => !prev);\n  };\n\n  const passwordIcon = showPassword ? 'icon-eye' : 'icon-eye-off';\n\n  return (\n    <form className={Form} onSubmit={formik.handleSubmit}>\n      <StyledInputContainer>\n        <StyledLabel\n          error={formik.errors.name && formik.touched.name}\n          active={formik.touched.name || formik.values.name !== ''}\n        >\n          Name\n        </StyledLabel>\n        <StyledInput\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"\"\n          error={formik.errors.name && formik.touched.name}\n          success={\n            !formik.errors.name && formik.touched.name && formik.values.name\n          }\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          autoComplete=\"off\"\n        />\n\n        {(formik.errors.name && formik.touched.name) ||\n        (!formik.errors.name && formik.touched.name) ? (\n          <ValidationIcon\n            error={formik.errors.name}\n            touched={formik.touched.name}\n            errorText={formik.errors.name}\n            successText={`Welcome ${formik.values.name}!`}\n          />\n        ) : null}\n      </StyledInputContainer>\n\n      <StyledInputContainer>\n        <StyledLabel\n          error={formik.errors.email && formik.touched.email}\n          active={formik.touched.email || formik.values.email !== ''}\n        >\n          Email\n        </StyledLabel>\n        <StyledInput\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"\"\n          error={formik.errors.email && formik.touched.email}\n          success={\n            !formik.errors.email && formik.touched.email && formik.values.email\n          }\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          autoComplete=\"off\"\n        />\n\n        {(formik.errors.email && formik.touched.email) ||\n        (!formik.errors.email && formik.touched.email) ? (\n          <ValidationIcon\n            error={formik.errors.email}\n            touched={formik.touched.email}\n            errorText={formik.errors.email}\n            successText={'Success email'}\n          />\n        ) : null}\n      </StyledInputContainer>\n\n      <StyledPasswordInputContainer>\n        <StyledLabel\n          error={formik.errors.password && formik.touched.password}\n          active={formik.touched.password || formik.values.password !== ''}\n        >\n          Password\n        </StyledLabel>\n        <StyledInput\n          name=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          placeholder=\"\"\n          error={formik.errors.password && formik.touched.password}\n          success={\n            !formik.errors.password &&\n            formik.touched.password &&\n            formik.values.password\n          }\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          autoComplete=\"off\"\n        />\n\n        <IconPasswordWrapper onClick={togglePassword}>\n          <SvgPasswordIcon>\n            <use href={`${sprite}#${passwordIcon}`} />\n          </SvgPasswordIcon>\n        </IconPasswordWrapper>\n      </StyledPasswordInputContainer>\n\n      {(formik.errors.password && formik.touched.password) ||\n      (!formik.errors.password && formik.touched.password) ? (\n        <ValidationIcon\n          error={formik.errors.password}\n          touched={formik.touched.password}\n          errorText={formik.errors.password}\n          successText={'Success password'}\n        />\n      ) : null}\n\n      <SubmitButton type=\"submit\">Sign Up</SubmitButton>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","import SignUpForm from 'components/Forms/SignUpForm';\nimport Section from 'components/Section';\nimport {\n  StyledContainer,\n  StyledWrapperTemplate,\n  StyledSignUpTitle,\n  StyledParagraf,\n  StyledTextRedirection,\n  StyledNavLink,\n} from './SignUpPage.styled';\nimport StatisticsList from 'components/statistic/StatisticsList';\n\nconst SignUpPage = () => {\n  return (\n    <Section use={'first'}>\n      <div className=\"container\">\n        <StyledContainer>\n          <StyledWrapperTemplate>\n            <StyledSignUpTitle>Sign Up</StyledSignUpTitle>\n            <StyledParagraf>\n              Thank you for your interest in our platform. To complete the\n              registration process, please provide us with the following\n              information.\n            </StyledParagraf>\n            <SignUpForm />\n            <StyledTextRedirection>\n              Already have an account?{' '}\n              <StyledNavLink to=\"/signin\">Sign In</StyledNavLink>\n            </StyledTextRedirection>\n          </StyledWrapperTemplate>\n          <StatisticsList />\n        </StyledContainer>\n      </div>\n    </Section>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","StyledInputContainer","_templateObject2","StyledLabel","_templateObject3","props","active","StyledInput","_templateObject4","error","success","IconWrapper","_templateObject5","SvgIcon","_templateObject6","fill","ErrorMessage","_templateObject7","color","StyledPasswordInputContainer","_templateObject8","IconPasswordWrapper","_templateObject9","SvgPasswordIcon","_templateObject10","SubmitButton","_templateObject11","StyledContainer","StyledWrapperTemplate","StyledSignUpTitle","StyledParagraf","StyledTextRedirection","StyledNavLink","NavLink","emailPattern","ValidationIcon","_ref","touched","successText","errorText","_jsxs","children","_jsx","href","concat","sprite","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","wrap","_context","prev","next","registerUser","then","_ref2","payload","token","notiflixMessage","resetForm","stop","_x","_x2","apply","arguments","validationSchema","Yup","shape","required","matches","min","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","passwordIcon","className","handleSubmit","errors","type","placeholder","value","onChange","handleChange","onBlur","handleBlur","autoComplete","onClick","Section","use","SignUpForm","to","StatisticsList"],"sourceRoot":""}